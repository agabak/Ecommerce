@page "/login"  
@using Blazored.LocalStorage
@using Ecom_Client.Services.https  
@inject IAuthService AuthService  
@rendermode InteractiveServer  
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage

<h3>Login</h3>  

<div class="form-group">  
    <label>Username</label>  
    <input @bind="userName" class="form-control" />  
</div>  
<div class="form-group">  
    <label>Password</label>  
    <input @bind="password" type="password" class="form-control" />  
</div>  
<button class="btn btn-primary" @onclick="PerformLogin">Login</button>  
<button class="btn btn-link" @onclick="@(() => Navigation.NavigateTo("/register"))">Register</button>  

@if (!string.IsNullOrEmpty(error))  
{  
    <div class="alert alert-danger mt-2">@error</div>  
}  

@code {  
    private string userName = "";  
    private string password = "";  
    private string error = "";  

    private async Task PerformLogin()  
    {  
        error = "";  
        var token = await AuthService.LoginAsync(userName, password);  
        if (!string.IsNullOrEmpty(token))  
        {  
            // Store the token in local storage
            await LocalStorage.SetItemAsync("jwt", token);
            Navigation.NavigateTo("/");
        }  
        else  
        {  
            error = "Invalid username or password.";  
        }  
    }  
}
